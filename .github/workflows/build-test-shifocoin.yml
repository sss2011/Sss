name: Build and Test Shifocoin

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  CC: gcc
  CXX: g++
  BUILD_DIR: build/
  INSTALL_DIR: shifocoin-release/

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Apply genesis assertion fixes
        run: |
          if [ -f "fix_chainparams.sh" ]; then
            chmod +x fix_chainparams.sh
            ./fix_chainparams.sh
            echo "Verifying fixes were applied..."
            FIXES=$(grep -c "SHIFOCOIN FIX" src/chainparams.cpp || echo "0")
            echo "Found $FIXES genesis assertion fixes applied"
            if [ "$FIXES" -ge 3 ]; then
              echo "✅ Genesis assertion fixes successfully applied"
            else
              echo "⚠️ Warning: Expected at least 3 fixes, found $FIXES"
            fi
          else
            echo "⚠️ Warning: fix_chainparams.sh not found - no fixes applied"
          fi

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Pre-build Rust components
        run: |
          if [ -d "src" ] && [ -f "src/Cargo.toml" ]; then
            cd src
            cargo build --release || echo "Rust pre-build completed (warnings expected)"
            cd ..
          fi
          echo "✅ Rust pre-build completed"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev unzip git python3 python3-zmq zlib1g-dev curl bsdmainutils automake libtinfo5 libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb++-dev libzmq3-dev libqrencode-dev libminiupnpc-dev libgmp-dev libcurl4-openssl-dev libsqlite3-dev libdb5.3++-dev wget ca-certificates gnupg lsb-release software-properties-common
          gcc --version
          g++ --version
          make --version

      - name: Fetch parameters
        run: |
          if [ -f "./zcutil/fetch-params.sh" ]; then
            ./zcutil/fetch-params.sh || echo "Params fetch skipped"
          else
            echo "No zcutil/fetch-params.sh found"
          fi

      - name: Build Shifocoin
        run: |
          make clean || echo "No previous build found"
          if [ -f "./zcutil/build.sh" ]; then
            ./zcutil/clean.sh || echo "Clean skipped"
            ./zcutil/build.sh -j$(nproc)
          else
            ./autogen.sh
            ./configure \
              --with-incompatible-bdb \
              --disable-wallet \
              --disable-bench \
              --disable-tests \
              --enable-glibc-back-compat \
              --without-miniupnpc \
              --without-gui \
              --enable-hardening \
              --prefix=$INSTALL_DIR
            make -j$(nproc)
          fi
          if [ -f "src/zcashd" ]; then
            echo "✅ zcashd built successfully"
          else
            echo "❌ Build failed - zcashd not found"
            exit 1
          fi

      - name: Package binaries
        run: |
          mkdir -p $BUILD_DIR/$INSTALL_DIR/bin
          mkdir -p $BUILD_DIR/$INSTALL_DIR/lib
          mkdir -p $BUILD_DIR/$INSTALL_DIR/share/zcash
          if [ -f "src/zcashd" ]; then
            cp src/zcashd $BUILD_DIR/$INSTALL_DIR/bin/
            cp src/zcash-cli $BUILD_DIR/$INSTALL_DIR/bin/
            cp src/zcash-tx $BUILD_DIR/$INSTALL_DIR/bin/
          fi
          chmod +x $BUILD_DIR/$INSTALL_DIR/bin/zcash*
          cat <<EOF > $BUILD_DIR/$INSTALL_DIR/share/zcash/zcash.conf.example
# Shifocoin Configuration Example
rpcuser=shifoUser
rpcpassword=StrongPassword1234!
rpcallowip=127.0.0.1
server=1
txindex=1
daemon=1
# For regtest testing:
# regtest=1
# testnet=1
EOF
          find . -name "libzcashconsensus.so*" -exec cp {} $BUILD_DIR/$INSTALL_DIR/lib/ \; 2>/dev/null || true
          cd $BUILD_DIR
          tar -czf ../shifocoin-linux-x64.tar.gz -C $INSTALL_DIR .
          tar -tzf ../shifocoin-linux-x64.tar.gz
          ls -la ../shifocoin-linux-x64.tar.gz

      - name: Create artifact ZIP
        run: |
          zip -r shifocoin-linux-binaries.zip shifocoin-linux-x64.tar.gz
          sha256sum shifocoin-linux-binaries.zip > artifact-sha256.txt

      - name: Extract and test binaries
        run: |
          unzip shifocoin-linux-binaries.zip
          tar -xzf shifocoin-linux-x64.tar.gz
          cd shifocoin-release
          chmod +x bin/zcashd bin/zcash-cli bin/zcash-tx
          file bin/zcashd
          ls -la bin/
          mkdir -p ~/.zcash
          cat <<EOF > ~/.zcash/zcash.conf
regtest=1
rpcuser=shifoUser
rpcpassword=StrongPassword1234!
rpcallowip=127.0.0.1
server=1
txindex=1
blocksonly=0
daemon=1
EOF
          ./bin/zcashd -regtest -daemon
          sleep 20
          tail -30 ~/.zcash/regtest/debug.log
          if pgrep -f zcashd > /dev/null; then
            echo "✅ zcashd daemon is running"
          else
            echo "❌ zcashd daemon failed to start"
            tail -50 ~/.zcash/regtest/debug.log
            exit 1
          fi
          echo "Testing getnetworkinfo..."
          ./bin/zcash-cli -regtest getnetworkinfo > networkinfo.json 2>&1
          if [ -f "networkinfo.json" ] && grep -q "version" networkinfo.json; then
            echo "✅ Regtest RPC working"
            cat networkinfo.json
          else
            echo "❌ Regtest RPC failed"
            cat networkinfo.json 2>&1 || echo "No output captured"
            tail -50 ~/.zcash/regtest/debug.log
            exit 1
          fi

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: shifocoin-linux-binaries
          path: |
            shifocoin-linux-binaries.zip
            artifact-sha256.txt
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: shifocoin-test-logs
          path: |
            networkinfo.json
            ~/.zcash/regtest/debug.log
            ~/.zcash/debug.log
          retention-days: 7

      - name: Workflow summary
        if: always()
        run: |
          echo "## Shifocoin Build & Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Runner**: ubuntu-20.04" >> $GITHUB_STEP_SUMMARY
          echo "- **Rust Version**: $(rustc --version 2>/dev/null || echo 'Not installed')" >> $GITHUB_STEP_SUMMARY
          if [ -f "shifocoin-linux-binaries.zip" ]; then
            echo "- **Artifact Size**: $(du -h shifocoin-linux-binaries.zip | cut -f1)" >> $GITHUB_STEP_SUMMARY
            echo "- **SHA256**: $(cat artifact-sha256.txt 2>/dev/null || echo 'Not available')" >> $GITHUB_STEP_SUMMARY
            echo "### ✅ Build Successful!" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Build Failed" >> $GITHUB_STEP_SUMMARY
            echo "Check logs above for specific error details." >> $GITHUB_STEP_SUMMARY
          fi
          echo "### Test Logs Available" >> $GITHUB_STEP_SUMMARY
